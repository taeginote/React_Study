3/11일
( 404 에러 )
404에러 (사용자가 웹 url을 잘못 입력했을때 나오는 error)
즉, 내가 없는 주소로 들어갈라했을때. 
이거 path: ‘*’,을 넣고 element: <NotFoundPage/>이런식으로 갈수있다.

--------------------------------------------------------------------------------------
로컬스토리지에 있는 값이 usestate가 아니다.
즉 로컬스토리지에 있는 토큰이 전역으로 관리할 필요가 있는데 이걸 하려면 useContext로 관리한다.

웹 사이트는 새로고침 할때 마다 state값은 초기화한다. 
그래서 useeffect를 사용해서 화면이 랜더링 할때마다 토큰이 있으면 다시 set을 해라 이 뜻인거같음.
useRef 저장변수 사용 못하는 이유는 저장은 가능하지만 랜더팅이 X이다 우리는 랜더링해서 동적인 값을 넣으려는 건데 이걸 쓰면 불가함
--------------------------------------------------------------------------------------

Axios에 인터셉터?
보내기 전에 가져가서 확인하는거이다.
즉 처음 값이 null이다.

토큰 만료 찾는거
401 error> 보통 토큰이 만료 되었다고 알려주는 error

1. refreshToken이 쿠키로 관리되어있다면
    보낼 필요가 없다, 백엔드와 프론트엔드 쿠키값을 공유할 수 있음

2. 로컬스토리지, 세션스토리지, 웹쿠키(공유하지 않는다는 전제)   
    axios.post(여기에 보낼 데이터 넣어서 보내기)

==> access_token이 전달될 것임
    const accessToken res.dat.token
    TokenService.setToken(accessToken);

Axios.defaults.headers.common['Authorization'] = 'Baefer ${accessToken}'
    return Axios(originalRequest)


----------------------------------------------------------------------------
 redux-saga
 
 msw
----------------------------------------------------------------------------
    msw (mocking service worker)
        -가상 service worker (웹페이지 브라우가 에서 일하는 놈)
        - 오프라인 캐싱, 푸시알림, 동기화

        즉 가상 워커를 실제 대신 사용한다.

        1. msw를 활용해서 mocking API 만들기 
            msw 사용이유
            1. 프론트 초기 개발 단계에서 백엔드가 존재하지 않을때 미리 Api를 통해 개발할수있다.
            2. Api서버가 다운되어도 Mock Api를 통한 테스트 가능.
            3. Api응답 속도가 느릴 경우 대체 가능, 더 빠르게 개발 및 테스트 수행 가능
            4. 다양한 시물레이션을 돌릴수있다.
        
----------------------------------------------------------------------------
    status(200)
    즉 200번은 성공이라는 의미다
    400번은 뭐지
    500번은 뭐지
    300번도 있나?
----------------------------------------------------------------------------

수업 듣고 질문>

 * 토이 프로젝트 질문>
    1. 프로젝트에서 파일을 올릴시 C:\fakepath?
    이런 형식을 받아서 우리가 파일을 찾을수없음
    
    2. props를 context로 관리할지 많이 어렵습니다.
        props로 하위 2개정도 들어가면 이런것도 props drilling이라 하는건지
        그냥 언제는 props를 쓸지 context관리할지 어렵습니다.
    
    3. 깊은 복사를 통해 데이터를 받는거는 데이터 수정만해도 랜더링을 하니깐?
        근데 이 상황에서는 그냥 랜더링이 있기때문에 깊은복사를 무조건! 다시 써서 구현해야할까?
        이런 의문도 있네요.
    
 
 * 오늘 수업 듣고 질문 리스트>
    1. 우리가 프로젝트 할때도 access토큰을 발급해야할까? (백엔드가 있어야하는거같은데?)
    2. 엑시오스 인터셉터를 하는 이유? 처음 값은 null이다. 근데 false도 true도 아닌 null이여서 조건문에 적용X이기 때문에?
    3. 어세스 토큰의 만료 시간? 이런거는 어떠한 기준으로 하는가? 이것도 백엔드에서 구현하는건가?
    4. 메일도 드렸지만 Axios 쓸때 response, error를 사용한다 이거는 즉 내장하고 있는것인가?

 * 깃 질문>
    1. 깃허브 메인만 잔디가 생긴다. 요즘같이 프로젝트 중점으로 하고있을때는 어떤식으로 할수있습니까?
       개인공부를 하는거를 올리는게 정답인가요?

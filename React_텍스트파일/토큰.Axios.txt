3/11일
( 404 에러 )
404에러 (사용자가 웹 url을 잘못 입력했을때 나오는 error)
즉, 내가 없는 주소로 들어갈라했을때. 
이거 path: ‘*’,을 넣고 element: <NotFoundPage/>이런식으로 갈수있다.

--------------------------------------------------------------------------------------
로컬스토리지에 있는 값이 usestate가 아니다.
즉 로컬스토리지에 있는 토큰이 전역으로 관리할 필요가 있는데 이걸 하려면 useContext로 관리한다.

웹 사이트는 새로고침 할때 마다 state값은 초기화한다. 
그래서 useeffect를 사용해서 화면이 랜더링 할때마다 토큰이 있으면 다시 set을 해라 이 뜻인거같음.
useRef 저장변수 사용 못하는 이유는 저장은 가능하지만 랜더팅이 X이다 우리는 랜더링해서 동적인 값을 넣으려는 건데 이걸 쓰면 불가함
--------------------------------------------------------------------------------------

Axios에 인터셉터?
보내기 전에 가져가서 확인하는거이다.
즉 처음 값이 null이다.

토큰 만료 찾는거
401 error) 보통 토큰이 만료 되었다고 알려주는 error

1. refreshToken이 쿠키로 관리되어있다면
    보낼 필요가 없다, 백엔드와 프론트엔드 쿠키값을 공유할 수 있음

2. 로컬스토리지, 세션스토리지, 웹쿠키(공유하지 않는다는 전제)   
    axios.post(여기에 보낼 데이터 넣어서 보내기)

==> access_token이 전달될 것임
    const accessToken res.dat.token
    TokenService.setToken(accessToken);

Axios.defaults.headers.common['Authorization'] = 'Baefer ${accessToken}'
    return Axios(originalRequest)


----------------------------------------------------------------------------
 redux-saga
 
 msw
----------------------------------------------------------------------------
    msw (mocking service worker)
        -가상 service worker (웹페이지 브라우가 에서 일하는 놈)
        - 오프라인 캐싱, 푸시알림, 동기화

        즉 가상 워커를 실제 대신 사용한다.

        1. msw를 활용해서 mocking API 만들기 
            msw 사용이유
            1. 프론트 초기 개발 단계에서 백엔드가 존재하지 않을때 미리 Api를 통해 개발할수있다.
            2. Api서버가 다운되어도 Mock Api를 통한 테스트 가능.
            3. Api응답 속도가 느릴 경우 대체 가능, 더 빠르게 개발 및 테스트 수행 가능
            4. 다양한 시물레이션을 돌릴수있다.
        
----------------------------------------------------------------------------
    status(200)
    즉 200번은 성공이라는 의미다
    400번은 뭐지
    500번은 뭐지
    300번도 있나?
----------------------------------------------------------------------------

수업 듣고 질문>


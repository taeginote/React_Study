{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaegi/Desktop/Git_React_Taegi/hookstest/Hooks/src/hooks/1.basic/q1.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n  문제1\r\n  useState 및 styled-components에 관련한 문제입니다.\r\n  아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n    1-1 )\r\n      ( O )\r\n      문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n      초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n      \r\n      ( O )\r\n      만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n      붉은색 글씨로 노출됩니다\r\n    1-2 )\r\n      ( O )\r\n      문제1-2는 보이기 버튼을 누른다면\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n      아래 보이는 p태그가 보여야합니다.\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n      p태그는 보이지 않아야합니다\r\n  */\n\n  const [color, setColor] = useState(\"red\");\n  const [state, setState] = useState(false);\n\n  //1-1_color state 변경 코드\n  const onChangeInput = el => {\n    if (el.target.value === el.target.placeholder) {\n      setColor(\"green\");\n      setState(true);\n    } else if (el.target.value.length === 0) {\n      setColor(\"red\");\n      setState(false);\n    } else {\n      setColor(\"black\");\n      setState(false);\n    }\n  };\n\n  //1-2\n  const [btnState, setBtnState] = useState(true);\n  const onClickShow = () => {\n    setBtnState(!btnState);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"김성용\",\n        style: {\n          textAlign: \"center\"\n        },\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.Message, {\n        style: {\n          color: color\n        },\n        children: state ? \"올바르게 입력하셨습니다\" : \"올바르게 글을 작성해주세요\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), btnState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickShow,\n          children: \"\\uC228\\uAE30\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \\uC774 \\uBB38\\uAD6C\\uB294 \\uBCF4\\uC774\\uAE30 \\uC0C1\\uD0DC\\uC77C \\uB54C\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickShow,\n          children: \"\\uBCF4\\uC774\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"pOQWbFNqsORNOARlYXtdQcNaKBs=\");\n_c = Q1;\nexport default Q1;\nconst Message = styled.p``;\nconst S = {\n  Message\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["useState","styled","Q1","color","setColor","state","setState","onChangeInput","el","target","value","placeholder","length","btnState","setBtnState","onClickShow","textAlign","Message","p","S"],"sources":["/Users/kimtaegi/Desktop/Git_React_Taegi/hookstest/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Q1() {\r\n    /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        ( O )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n        \r\n        ( O )\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n\r\n    1-2 )\r\n        ( O )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n  */\r\n\r\n    const [color, setColor] = useState(\"red\");\r\n    const [state, setState] = useState(false);\r\n\r\n    //1-1_color state 변경 코드\r\n    const onChangeInput = (el) => {\r\n        if (el.target.value === el.target.placeholder) {\r\n            setColor(\"green\");\r\n            setState(true);\r\n        } else if (el.target.value.length === 0) {\r\n            setColor(\"red\");\r\n            setState(false);\r\n        } else {\r\n            setColor(\"black\");\r\n            setState(false);\r\n        }\r\n    };\r\n\r\n    //1-2\r\n    const [btnState, setBtnState] = useState(true);\r\n    const onClickShow = () => {\r\n        setBtnState(!btnState);\r\n    };\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <div>\r\n                <h2>문제1-1.</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={\"김성용\"}\r\n                    style={{ textAlign: \"center\" }}\r\n                    onChange={onChangeInput}\r\n                />\r\n\r\n                <S.Message style={{ color: color }}>\r\n                    {state\r\n                        ? \"올바르게 입력하셨습니다\"\r\n                        : \"올바르게 글을 작성해주세요\"}\r\n                </S.Message>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>문제1-2. </h2>\r\n                {btnState ? (\r\n                    <>\r\n                        <button onClick={onClickShow}>숨기기</button>\r\n                        <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button onClick={onClickShow}>보이기</button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p``;\r\n\r\nconst S = {\r\n    Message,\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,SAASC,EAAE,GAAG;EAAA;EACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAMI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAMO,aAAa,GAAIC,EAAE,IAAK;IAC1B,IAAIA,EAAE,CAACC,MAAM,CAACC,KAAK,KAAKF,EAAE,CAACC,MAAM,CAACE,WAAW,EAAE;MAC3CP,QAAQ,CAAC,OAAO,CAAC;MACjBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM,IAAIE,EAAE,CAACC,MAAM,CAACC,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;MACrCR,QAAQ,CAAC,KAAK,CAAC;MACfE,QAAQ,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACHF,QAAQ,CAAC,OAAO,CAAC;MACjBE,QAAQ,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;;EAED;EACA,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMe,WAAW,GAAG,MAAM;IACtBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EACD,oBACI;IAAA,wBACI;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,wBACI;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAE,KAAM;QACnB,KAAK,EAAE;UAAEG,SAAS,EAAE;QAAS,CAAE;QAC/B,QAAQ,EAAET;MAAc;QAAA;QAAA;QAAA;MAAA,QAC1B,eAEF,QAAC,CAAC,CAAC,OAAO;QAAC,KAAK,EAAE;UAAEJ,KAAK,EAAEA;QAAM,CAAE;QAAA,UAC9BE,KAAK,GACA,cAAc,GACd;MAAgB;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA,QACV,eAEN;MAAA,wBACI;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,EACfQ,QAAQ,gBACL;QAAA,wBACI;UAAQ,OAAO,EAAEE,WAAY;UAAA,UAAC;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS,eAC1C;UAAA,UAAG;QAA2B;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA,gBACnC,gBAEH;QAAA,uBACI;UAAQ,OAAO,EAAEA,WAAY;UAAA,UAAC;QAAG;UAAA;UAAA;UAAA;QAAA;MAAS,iBAEjD;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACP;AAEX;AAAC,GAlFQb,EAAE;AAAA,KAAFA,EAAE;AAmFX,eAAeA,EAAE;AAEjB,MAAMe,OAAO,GAAGhB,MAAM,CAACiB,CAAE,EAAC;AAE1B,MAAMC,CAAC,GAAG;EACNF;AACJ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}